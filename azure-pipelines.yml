trigger:
  branches:
    include:
    - main
    - develop
    - feature/*
    - release/v*
  tags:
    include:
      - '*'

stages:
  - stage: 'Build'
    displayName: 'Build the application'
    jobs:
      - job: 'Build'
        displayName: 'Build'
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9'
            displayName: 'Install Python 3.9'
          - script: |
              python -m pip install flake8
              flake8 app test
            displayName: 'Lint code'
          - script: |
              python -m pip install vulture
              vulture app test
            displayName: 'Find dead code'
          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            displayName: 'Install dependencies'
          - script: |
              pip install pytest pytest-azurepipelines
              export PYTHONPATH="./app" && python -m pytest
            displayName: 'pytest'
          - task: ArchiveFiles@2
            condition: ne(variables['Build.SourceBranchName'], 'merge')
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)"
              includeRootFolder: false
              archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
          - bash: |
              pip install --target="./.python_packages/lib/python3.9/site-packages" -r ./requirements.txt
            condition: ne(variables['Build.SourceBranchName'], 'merge')
          - task: PublishBuildArtifacts@1
            condition: ne(variables['Build.SourceBranchName'], 'merge')
            inputs:
              PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
              artifactName: drop
  - stage: 'Integration'
    displayName: 'Deploy to integration environment'
    dependsOn: 'Build'
    condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'merge'))
    jobs:
      - deployment: Deploy
        pool:
          vmImage: ubuntu-latest
        environment: integration
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                - task: AzureFunctionApp@2
                  inputs:
                    azureSubscription: 'PrincipalConnectionStaging'
                    appType: functionAppLinux
                    appName: 'csl-jobs-int'
                    package: '$(Pipeline.Workspace)/drop/*.zip'
                    runtimeStack: PYTHON|3.9
                    deploymentMethod: 'runFromPackage'
