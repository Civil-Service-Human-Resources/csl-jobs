trigger:
  branches:
    include:
    - main
    - develop
    - feature/*
    - release/v*
  tags:
    include:
      - '*'

variables:
  - name: acr_repo_suffix
    ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
      value: 'prod'
    ${{ else }}:
      value: 'test'
  - group: 'ACR details'

stages:
  - stage: 'Build'
    displayName: 'Build the application'
    jobs:
      - job: 'Build'
        displayName: 'Build'
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.9'
            displayName: 'Install Python 3.9'
          - script: |
              python -m pip install flake8
              flake8 app test
            displayName: 'Lint code'
          - script: |
              python -m pip install vulture
              vulture app test
            displayName: 'Find dead code'
          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            displayName: 'Install dependencies'
          - script: |
              pip install pytest pytest-azurepipelines
              export PYTHONPATH="./app" && python -m pytest
            displayName: 'pytest'
          - task: Docker@2
            condition: ne(variables['Build.SourceBranchName'], 'merge')
            inputs:
              containerRegistry: 'lpgregistry ACR'
              repository: 'csl-jobs/${{ variables.acr_repo_suffix }}'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: '$(Build.SourceBranchName)'
  - stage: 'Integration'
    displayName: 'Deploy to integration environment'
    dependsOn: 'Build'
    condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'merge'))
    jobs:
      - deployment: Deploy
        pool:
          vmImage: ubuntu-latest
        environment: integration
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureFunctionAppContainer@1
                  inputs:
                    azureSubscription: 'PrincipalConnectionStaging'
                    imageName: $(acr_url)/csl-jobs/${{ variables.acr_repo_suffix }}:$(Build.SourceBranchName)
                    appName: 'csl-jobs-integration'
